<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.miravm</groupId>
    <artifactId>miravm-parent</artifactId>
    <version>1.0.0</version>
  </parent>

  <artifactId>miravm-dist-parent</artifactId>
  <name>MiraVM Distribution</name>
  <packaging>pom</packaging>
  <properties>
    <licenseTxtURL>file://${basedir}/../LICENSE.txt</licenseTxtURL>
    <miravm.version>${project.version}</miravm.version>
    <release.arguments />
  </properties>

  <url>http://www.miravm.com</url>
  <description>
    The RoboVM compiler translates Java bytecode into native ARM or x86 code. Apps run directly on the CPU.
    No interpreter or virtual machine involved.
  </description>
  <inceptionYear>2012</inceptionYear>

  <organization>
    <name>RoboVM AB</name>
    <url>http://www.miravm.com</url>
  </organization>

  <scm>
    <url>https://github.com/miravm/miravm-dist</url>
    <connection>scm:git:git://github.com/miravm/miravm-dist.git</connection>
    <developerConnection>scm:git:git@github.com:miravm/miravm-dist.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/miravm/miravm/issues</url>
  </issueManagement>

  <profiles>
    <profile>
      <id>commercial</id>
      <properties>
        <!-- Must be specified on the Maven command line using -DlicenseTxtURL=... -->
        <licenseTxtURL>unknown</licenseTxtURL>
      </properties>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <inherited>true</inherited>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <!-- Workaround for an issue in Maven's release plugin. It doesn't 
                 pass -Darguments here if a profile (like sonatype's) sets 
                 <arguments> in the release plugin config. We also set the same
                  config properties as sonatype's pom does since our configuration 
                  overwrites theirs. -->
            <mavenExecutorId>forked-path</mavenExecutorId>
            <useReleaseProfile>false</useReleaseProfile>
            <arguments>-Psonatype-oss-release ${release.arguments}</arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
          <executions>
            <execution>
              <id>create-license-txt</id>
              <phase>none</phase>
              <configuration>
                <target>
                  <fail message="The property licenseTxtURL must be specified">
                    <condition>
                      <equals arg1="${licenseTxtURL}" arg2="unknown" />
                    </condition>
                  </fail>
                  <property name="licenseFile" value="${basedir}/target/LICENSE.txt" />
                  <echo message="Downloading license text from ${licenseTxtURL} to ${licenseFile}" />
                  <loadresource property="license">
                    <url url="${licenseTxtURL}" />
                  </loadresource>
                  <echo message="${license}" file="${licenseFile}" />
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <modules>
    <module>compiler</module>
    <module>package</module>
  </modules>

</project>
